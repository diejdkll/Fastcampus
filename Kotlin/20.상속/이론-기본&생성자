상속(inheritance)
- 상속이 필요한 경우
    - 확장된 클래스를 만들고 싶은 경우
        - class Warrior(){ -> 바탕이 되는 클래스
            fun attack(){}
         }
        - class DefenseWarrior(){ -> 확장된 클래스
            fun attack(){}
            fun defense(){}
         }
        - class HardAttackWarrior(){ -> 확장된 클래스
            fun attack(){}
            fun hardAttack(){}
        }
    - 이미 존재하는 클래스를 합칠 때
- 상속은 공통점 찾기가 아니다!

- 키워드
    - open 이라는 키워드로 설정된 클래스만 상속 할 수 있다
    - open 키워드는 class 앞에 적어준다
    - final 로 설정된 클래스는 상속을 할 수 없다 -> 기본(아무것도 적지 않은 상태)

- 슈퍼클래스/서브클래스, 부모클래스/자식클래스
- 서브클래스는 슈퍼클래스의 생성을 책임져야한다
- 슈퍼클래스가 사용하고 있는 멤버와 동일한 이름의 멤버를 만들수 없다
- 자식 클래스는 부모 클래스가 가지고 있는 모든것을 물려 받는다
- 상속은 여러번 할 수 있다
- 다중상속은 불가능하다 (A,B를 상속(다중상속)하는 클래스 C는 불가능)

           DefenseWarrior
____________________________________
|                   ______________ |
| -----------       |   attack   | |
| | defense |       -------------- |
| -----------                      |
------------------------------------
